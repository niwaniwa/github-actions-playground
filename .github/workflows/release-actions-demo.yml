name: release actions

on:
  workflow_dispatch:
    inputs:
      release_kind:
        type: choice
        description: Release kind
        default: none
        required: true
        options:
          - prerelease
          - start-rc
          - stable
      publish:
        description: "publish release"
        type: boolean
        required: false

# for vrchat package
jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.PRIVATE_KEY }}
      - uses: actions/checkout@v4
      - uses: snow-actions/git-config-user@v1.0.0

      - name: Get package version
        id: version
        uses: notiz-dev/github-action-json-property@7c8cf5cc36eb85d8d287a8086a39dac59628eb31
        with: 
            path: "package.json"
            prop_path: "version"


      - name: Show kind
        run: echo type = ${{ github.event.inputs.release_kind }}

      - name: Setup release kind
        run: |
          case "${{ github.event.inputs.release_kind }}" in
            "prerelease" )
              echo "RELEASE_KIND=beta" >> $GITHUB_ENV 
              echo "PRERELEASE=true" >> $GITHUB_ENV 
              ;;
            "start-rc" )
              echo "RELEASE_KIND=rc" >> $GITHUB_ENV 
              echo "PRERELEASE=true" >> $GITHUB_ENV 
              ;;
            "stable" )
              echo "RELEASE_KIND=none" >> $GITHUB_ENV 
              echo "PRERELEASE=false" >> $GITHUB_ENV 
              ;;
            * )
              echo "invalid release kind: ${{ github.event.inputs.release_kind }}"
              exit 255
              ;;
          esac

      - name: Get bump version
        id: bumpup
        uses: niwaniwa/version-next@v1.0.2
        with:
          version-input: ${{ steps.version.outputs.prop }}
          release-type: ${{ env.RELEASE_KIND }}

      - name: Show version
        run: |
          echo version = ${{ steps.bumpup.outputs.next_version }}

      - id: changelog
        uses: niwaniwa/sh-actions/changelog/prepare-release@master
        with:
            version: ${{ steps.version.outputs.prop }}
            prerelease: ${{ env.PRERELEASE }}
            tag-prefix: v
            prerelease-note-heading: |
                Version ${{ steps.version.outputs.prop }}
                ---

                **This is SNAPSHOT, not a stable release. make sure this may have many bugs.**
            release-note-heading: |
                Version ${{ steps.version.outputs.prop }}
                ---
      - name: Upload CHANGELOG.md
        if: ${{ !fromJSON(env.PRERELEASE) }}
        uses: actions/upload-artifact@v4
        with:
          name: CHANGELOG
          path: CHANGELOG.md
      - name: Upload CHANGELOG-PRERELEASE.md
        uses: actions/upload-artifact@v4
        with:
          name: CHANGELOG-PRERELEASE
          path: CHANGELOG-PRERELEASE.md

      - run: cp "${{ steps.changelog.outputs.release-note }}" release-note.md

      - name: Upload release note
        uses: actions/upload-artifact@v4
        with:
          name: changelog
          path: release-note.md
      - run: rm release-note.md

      - name: Commit & tag version
        if: ${{ inputs.publish }}
        run: |
          git commit -am "chore: bump version to ${{ steps.version.outputs.prop }}"
          git tag "v${{ steps.version.outputs.prop }}"

      - name: Publish Release
        if: ${{ inputs.publish }}
        run: |
          git push && git push origin "v${{ steps.version.outputs.prop }}"

      - name: Publish release to github
        if: ${{ inputs.publish }}
        env:
          GH_TOKEN: ${{ github.token }}
          RELEASE_NOTE: ${{ steps.changelog.outputs.release-note }}
        shell: bash
        run: |
          sleep 1

          gh release create "v${{ steps.version.outputs.prop }}" \
            -F "$RELEASE_NOTE" \
            ${{ fromJSON(env.PRERELEASE) && '--prerelease' || '' }}
            

      - name: prepare next release & push
        if: inputs.publish && !fromJSON(env.PRERELEASE)
        run: |
          git commit -am "chore: prepare for next version: ${{ steps.bumpup.outputs.next_version }}"
          git push && git push --tags